Уважаеми колеги,

Това е втората и последна домашна работа. Задачата на контролното на 30 юни ще бъде подобна.

Допълнете compute.cpp файла като напишете разделна декларация на класовете (преди main функцията) и съответно дефиниция на декларираните член-функции и функции след main функцията на обозначените за това места (с коментари).

Не променайте секциите, оградени с коментари "DO NOT TOUCH"!

Програмата трябва да приема пътища до два файла - един, съдържащ данните (примерен такъв е даден като data.in.txt) и един, който съдържа изчисленията, които програмата трябва да извърши върху данните (примерен такъв е даден като compute.in.txt).

Ето детайлните изисквания към програмата:

    Напишете абстрактен клас Computation, който да дефинира напълно виртуална функция compute. 
    Напишете няколко наследника на базовия клас, които имплементират compute по различен начин:
        Клас, който сумира числата
        Клас, който сумира четните числа
        Клас, който намира най-малкото число
    Вътре в main функцията, прочетете пътищата до двата входни файла от аргументите на командния ред.
        Пътят до файла с данните трябва да е първия аргумент от командния ред
        Пътят до файла с изчисленията трябва да е втория аргумент от командния ред.
        Програмата трябва да се извиква по следния начин: "compute.exe data.in.txt compute.in.txt".
    Напишете тяло на функцията readDataFromFile, която получава път до файл с числа и до края на файла прочита цели числа и ги връща като вектор.
    Напишете тяло на функцията readComputationsFromFile, която получава път до файл с имена на изчисления, всяко на нов ред и връща вектор от указатели към обекти от тип Computation. Това ще бъдат наследници на Computation, които вие сте дефинирали.
        На база на записания във файла тип трябва да определите обект от кой клас да създадете и да запишете в резултатния вектор.
    Декларирайте класовете в съответната секция (маркирана с коментар) преди main функцията.
    Дефинирайте функциите заедно с техните тела след main функцията.

Проверете expected.out.txt за да видите очаквания изход на завършената програма. Когато стартирате програмата и й подадете като първи и втори аргумент съответно пътя до data.in.txt и compute.in.txt, вашата програма трябва да произведе същия изход.
